<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>csWhizz</title><link>https://cswhizz.github.io/</link><description>Recent content on csWhizz</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Fri, 26 Nov 2021 19:09:03 +0530</lastBuildDate><atom:link href="https://cswhizz.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Blockchain</title><link>https://cswhizz.github.io/post/blockchain/</link><pubDate>Fri, 26 Nov 2021 19:09:03 +0530</pubDate><guid>https://cswhizz.github.io/post/blockchain/</guid><description/></item><item><title>Blog Components Testing</title><link>https://cswhizz.github.io/post/blog-components-testing/</link><pubDate>Sun, 21 Nov 2021 10:56:24 +0530</pubDate><guid>https://cswhizz.github.io/post/blog-components-testing/</guid><description>&lt;h4 id="heading-example">Heading example&lt;/h4>
&lt;p>Here is example of hedings. You can use this heading by following markdownify rules. For example: use &lt;code>#&lt;/code> for heading 1 and use &lt;code>######&lt;/code> for heading 6.&lt;/p>
&lt;h1 id="heading-1">Heading 1&lt;/h1>
&lt;h2 id="heading-2">Heading 2&lt;/h2>
&lt;h3 id="heading-3">Heading 3&lt;/h3>
&lt;h4 id="heading-4">Heading 4&lt;/h4>
&lt;h5 id="heading-5">Heading 5&lt;/h5>
&lt;h6 id="heading-6">Heading 6&lt;/h6>
&lt;hr>
&lt;h5 id="emphasis">Emphasis&lt;/h5>
&lt;p>Emphasis, aka italics, with &lt;em>asterisks&lt;/em> or &lt;em>underscores&lt;/em>.&lt;/p>
&lt;p>Strong emphasis, aka bold, with &lt;strong>asterisks&lt;/strong> or &lt;strong>underscores&lt;/strong>.&lt;/p>
&lt;p>Combined emphasis with &lt;strong>asterisks and &lt;em>underscores&lt;/em>&lt;/strong>.&lt;/p>
&lt;p>Strikethrough uses two tildes. &lt;del>Scratch this.&lt;/del>&lt;/p>
&lt;hr>
&lt;h5 id="link">Link&lt;/h5>
&lt;p>&lt;a href="https://www.google.com">I&amp;rsquo;m an inline-style link&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.google.com" title="Google's Homepage">I&amp;rsquo;m an inline-style link with title&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.themefisher.com">I&amp;rsquo;m a reference-style link&lt;/a>&lt;/p>
&lt;p>&lt;a href="../blob/master/LICENSE">I&amp;rsquo;m a relative reference to a repository file&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://gethugothemes.com">You can use numbers for reference-style link definitions&lt;/a>&lt;/p>
&lt;p>Or leave it empty and use the &lt;a href="https://www.getjekyllthemes.com">link text itself&lt;/a>.&lt;/p>
&lt;p>URLs and URLs in angle brackets will automatically get turned into links.
&lt;a href="http://www.example.com">http://www.example.com&lt;/a> or &lt;a href="http://www.example.com">http://www.example.com&lt;/a> and sometimes
example.com (but not on Github, for example).&lt;/p>
&lt;p>Some text to show that the reference links can follow later.&lt;/p>
&lt;hr>
&lt;h5 id="paragraph">Paragraph&lt;/h5>
&lt;p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quam nihil enim maxime corporis cumque totam aliquid nam sint inventore optio modi neque laborum officiis necessitatibus, facilis placeat pariatur! Voluptatem, sed harum pariatur adipisci voluptates voluptatum cumque, porro sint minima similique magni perferendis fuga! Optio vel ipsum excepturi tempore reiciendis id quidem? Vel in, doloribus debitis nesciunt fugit sequi magnam accusantium modi neque quis, vitae velit, pariatur harum autem a! Velit impedit atque maiores animi possimus asperiores natus repellendus excepturi sint architecto eligendi non, omnis nihil. Facilis, doloremque illum. Fugit optio laborum minus debitis natus illo perspiciatis corporis voluptatum rerum laboriosam.&lt;/p>
&lt;hr>
&lt;h5 id="ordered-list">Ordered List&lt;/h5>
&lt;ol>
&lt;li>List item&lt;/li>
&lt;li>List item&lt;/li>
&lt;li>List item&lt;/li>
&lt;li>List item&lt;/li>
&lt;li>List item&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h5 id="unordered-list">Unordered List&lt;/h5>
&lt;ul>
&lt;li>List item&lt;/li>
&lt;li>List item&lt;/li>
&lt;li>List item&lt;/li>
&lt;li>List item&lt;/li>
&lt;li>List item&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="notice">Notice&lt;/h4>
&lt;div class="notices note" >&lt;p>This is a simple note.&lt;/p>&lt;/div>
&lt;div class="notices tip" >&lt;p>This is a simple tip.&lt;/p>&lt;/div>
&lt;div class="notices info" >&lt;p>This is a simple info.&lt;/p>&lt;/div>
&lt;h4 id="tab">Tab&lt;/h4>
&lt;div class="code-tabs">
&lt;ul class="nav nav-tabs">&lt;/ul>
&lt;div class="tab-content">
&lt;div class="tab-pane" title="first">
This is first tab
&lt;/div>
&lt;div class="tab-pane" title="second">
this is second tab
&lt;/div>
&lt;div class="tab-pane" title="third">
this is third tab
&lt;/div>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h3 id="collapse">Collapse&lt;/h3>
&lt;div class="border border-default collapse-wrapper">
&lt;a class="d-flex p-2 collapse-head" data-toggle="collapse" href="#collapse-1" role="button">
collapse 1 &lt;i class="las la-plus ml-auto">&lt;/i>
&lt;/a>
&lt;div class="collapse" id="collapse-1">&lt;div class="p-2">This is a simple collapse&lt;/div>&lt;/div>
&lt;/div>
&lt;div class="border border-default collapse-wrapper">
&lt;a class="d-flex p-2 collapse-head" data-toggle="collapse" href="#collapse-2" role="button">
collapse 2 &lt;i class="las la-plus ml-auto">&lt;/i>
&lt;/a>
&lt;div class="collapse" id="collapse-2">&lt;div class="p-2">This is a simple collapse&lt;/div>&lt;/div>
&lt;/div>
&lt;div class="border border-default collapse-wrapper">
&lt;a class="d-flex p-2 collapse-head" data-toggle="collapse" href="#collapse-3" role="button">
collapse 3 &lt;i class="las la-plus ml-auto">&lt;/i>
&lt;/a>
&lt;div class="collapse" id="collapse-3">&lt;div class="p-2">This is a simple collapse&lt;/div>&lt;/div>
&lt;/div>
&lt;hr>
&lt;h5 id="code-and-syntax-highlighting">Code and Syntax Highlighting&lt;/h5>
&lt;p>Inline &lt;code>code&lt;/code> has &lt;code>back-ticks around&lt;/code> it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">var&lt;/span> &lt;span class="nx">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;JavaScript syntax highlighting&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">alert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Python syntax highlighting&amp;#34;&lt;/span>
&lt;span class="nb">print&lt;/span> &lt;span class="n">s&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h5 id="blockquote">Blockquote&lt;/h5>
&lt;blockquote>
&lt;p>This is a blockquote example.&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h5 id="inline-html">Inline HTML&lt;/h5>
&lt;p>You can also use raw HTML in your Markdown, and it&amp;rsquo;ll mostly work pretty well.&lt;/p>
&lt;dl>
&lt;dt>Definition list&lt;/dt>
&lt;dd>Is something people use sometimes.&lt;/dd>
&lt;dt>Markdown in HTML&lt;/dt>
&lt;dd>Does *not* work **very** well. Use HTML &lt;em>tags&lt;/em>.&lt;/dd>
&lt;/dl>
&lt;hr>
&lt;h5 id="tables">Tables&lt;/h5>
&lt;p>Colons can be used to align columns.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Tables&lt;/th>
&lt;th style="text-align:center">Are&lt;/th>
&lt;th style="text-align:right">Cool&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>col 3 is&lt;/td>
&lt;td style="text-align:center">right-aligned&lt;/td>
&lt;td style="text-align:right">$1600&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>col 2 is&lt;/td>
&lt;td style="text-align:center">centered&lt;/td>
&lt;td style="text-align:right">$12&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>zebra stripes&lt;/td>
&lt;td style="text-align:center">are neat&lt;/td>
&lt;td style="text-align:right">$1&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>There must be at least 3 dashes separating each header cell.
The outer pipes (|) are optional, and you don&amp;rsquo;t need to make the
raw Markdown line up prettily. You can also use inline Markdown.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Markdown&lt;/th>
&lt;th>Less&lt;/th>
&lt;th>Pretty&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;em>Still&lt;/em>&lt;/td>
&lt;td>&lt;code>renders&lt;/code>&lt;/td>
&lt;td>&lt;strong>nicely&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>2&lt;/td>
&lt;td>3&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h5 id="image">Image&lt;/h5>
&lt;p>&lt;img src="../../images/post/01.jpg" alt="image">&lt;/p>
&lt;hr>
&lt;h5 id="youtube-video">Youtube video&lt;/h5>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/C0DPdy98e4c" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></description></item><item><title>What I learned From A Virtual Hackathon</title><link>https://cswhizz.github.io/post/what-i-learned-from-a-virtual-hackathon/</link><pubDate>Tue, 12 Oct 2021 08:30:00 +0000</pubDate><guid>https://cswhizz.github.io/post/what-i-learned-from-a-virtual-hackathon/</guid><description/></item><item><title>Inheritance in C++</title><link>https://cswhizz.github.io/post/inheritance-in-c-/</link><pubDate>Fri, 10 Sep 2021 22:32:57 +0530</pubDate><guid>https://cswhizz.github.io/post/inheritance-in-c-/</guid><description>&lt;p>C++ allow for creating a heirarchy of classes so that objects do not have to be instances of a single class. Consider the following example:&lt;/p>
&lt;h3 id="inheritancecpp">inheritance.cpp&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">base&lt;/span> &lt;span class="c1">//single base class
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">public&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="nf">getx&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;x = 2&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">derive1&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="k">public&lt;/span> &lt;span class="n">base&lt;/span> &lt;span class="c1">// derived class from base class
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">public&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="nf">gety&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;y = 3&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">derive2&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="k">public&lt;/span> &lt;span class="n">derive1&lt;/span> &lt;span class="c1">// derived from class derive1
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">private&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">z&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">public&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="n">getz&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;z = 3&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="nf">product&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;Product = &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">z&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">derive2&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//object of derived2 class
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getx&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">gety&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getz&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">product&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="output">Output&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;span class="n">Product&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">18&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The class &lt;code>base&lt;/code> is the &lt;em>base class&lt;/em> or &lt;em>superclass&lt;/em> and the classes &lt;code>derive1&lt;/code> and &lt;code>derive2&lt;/code> are the child classes or &lt;em>subclasses&lt;/em> or &lt;em>derived classes&lt;/em>. The child classes inherits all the data members and member functions of the base class so that they do not have to repeat the same definitions. However the child classes can have their own data members and member functions and even override the member functions of the base class. In this way, both the base classes and derived classes have some measure of control over their data members and member functions.&lt;/p>
&lt;p>This code is pretty self explanatory. The class &lt;code>base&lt;/code> has a single data member &lt;code>x&lt;/code> and a single member function &lt;code>getx()&lt;/code>. The class &lt;code>derive1&lt;/code> inherits all the data members and member functions of the base class and adds a new data member &lt;code>y&lt;/code> and a new member function &lt;code>gety()&lt;/code>. The class &lt;code>derive2&lt;/code> inherits all the data members and member functions of the derived class &lt;code>derive1&lt;/code> and adds a new data member &lt;code>z&lt;/code> and a new member function &lt;code>getz()&lt;/code>. The class &lt;code>derive2&lt;/code> also adds a new member function &lt;code>product()&lt;/code> which calculates the product of the three data members &lt;code>x&lt;/code>, &lt;code>y&lt;/code> and &lt;code>z&lt;/code>.&lt;/p></description></item><item><title>Birth of Cryptography 700 BCE</title><link>https://cswhizz.github.io/post/birth-of-cryptography-700-bce/</link><pubDate>Wed, 08 Sep 2021 07:08:00 +0000</pubDate><guid>https://cswhizz.github.io/post/birth-of-cryptography-700-bce/</guid><description>&lt;p>Security is must in modern computing. However, many people don’t know that it was originated thousands of years ago in the Roman Empire. One of the important milestones in the history of computing is the birth of cryptography.&lt;/p>
&lt;p>Cryptography is an intelligent way of protecting information and communications. It uses codes and secret language, so that only those for whom the information is intended can read and process it. Today we can see many examples of cryptography viz. the End-to-End encryption in WhatsApp chats.&lt;/p>
&lt;p>According to computer science:&lt;/p>
&lt;blockquote>
&lt;p>Cryptography refers to secure information and communication techniques derived from mathematical concepts and a set of rule-based calculations called algorithms, to transform messages in ways that are hard to decipher.&lt;/p>
&lt;/blockquote>
&lt;!--adsense-->
&lt;h3 id="first-encrypted-message">First encrypted message&lt;/h3>
&lt;p>During Roman times, back in 700 BCE Spartan military needed to send messages over long distances. They message had to travel fast, which meant that they couldn&amp;rsquo;t be transported by a large, slow moving battalion. Also the messages needed to be secret, in case caught by the enemy.&lt;/p>
&lt;p>To protect its messages, the military devised a secure communications system involving two wooden staffs of identical diameter and a strip of parchment. Two parties needing to communicate each would have a single staff. To create a message, the sending party would wrap the parchment around his staff and then write a message across; when the parchment was unwrapped, the message would be scrambled. At the other end, the recipient would wrap the message around his staff, and the message would be legible once again.&lt;/p>
&lt;p>The scytale is mentioned in the writings of Archilochus, a Greek poet who lived from 680 BCE to 645 BCE. Today, nearly every modern cryptography textbook features a description of the scytale. Although there are examples of cryptography and encipherment from ancient Egypt, Mesopotamia, and Judaea, the scytale is the first example of a cryptographic device—with the diameter of the staff being akin to the encryption key. (A key is a secret—typically a word, number, or phrase—that controls the encryption algorithm. The key determines how the message is encrypted; for most encryption algorithms, the same key is used to decrypt the encrypted message. Thus, keeping the key secret is critical to message security.)&lt;/p>
&lt;p>This article is a part of the series &lt;a href="https://cswhizz.github.io/series/computer-evolution/">Computer Evolution&lt;/a>.&lt;/p>
&lt;p>&lt;small>Source : The Computer Book&lt;/small>&lt;/p></description></item><item><title>The First Computer 2500 BCE</title><link>https://cswhizz.github.io/post/the-first-computer-2500-bce/</link><pubDate>Mon, 06 Sep 2021 22:49:19 +0530</pubDate><guid>https://cswhizz.github.io/post/the-first-computer-2500-bce/</guid><description>&lt;p>The abacus is the first instrument designed for computation. It made easy for people to calculate numbers and measurements. It could perform basic arithmetic operations and was the world&amp;rsquo;s first tabulation machine.&lt;/p>
&lt;h3 id="origin">Origin&lt;/h3>
&lt;p>The Sumerians of Mesopotamia contributed much in the field of mathematics and are believed to have invented the abacus. The abacus was used in ancient times for measuring weights and distances.&lt;/p>
&lt;p>The Sumerian device was completely different from today&amp;rsquo;s modern abacus. It was a flat surface most probably a stone tablet, that had parallel lines with counters, such as pebbles to track quantity. Later the bead form of abacus originated in China. This new design was a frame with rods and beads that slide to different positions. This is still in use today.&lt;/p>
&lt;!--adsense-->
&lt;h3 id="what-did-they-use-it-for">What did they use it for?&lt;/h3>
&lt;p>The Sumerians had well planned cities, robust economies and trade. There was a serious need for a counting and measuring instrument to transact business and distribute goods. The abacus was used for this purpose.&lt;/p>
&lt;p>They were the first to use symbols to represent groups of objects to communicate large numbers. They used the &lt;em>sexadecimal system&lt;/em> to represent numbers. We owe to the Sumerians our 60-second minute and 60-minute hour.&lt;/p>
&lt;p>The word &lt;em>abacus&lt;/em> is derived from the Latin &lt;em>abaculus&lt;/em> which means &amp;ldquo;stone tablet&amp;rdquo;. The abacus was used for measuring weights and distances.&lt;/p>
&lt;p>This article is a part of the series &lt;a href="https://cswhizz.github.io/series/computer-evolution/">Computer Evolution&lt;/a>.&lt;/p>
&lt;p>&lt;small>Source : The Computer Book&lt;/small>&lt;/p></description></item><item><title>Objects and Classes in CPP</title><link>https://cswhizz.github.io/post/objects-and-classes-in-cpp/</link><pubDate>Sat, 04 Sep 2021 03:30:00 +0000</pubDate><guid>https://cswhizz.github.io/post/objects-and-classes-in-cpp/</guid><description>&lt;p>And now the topic you have all been waiting for, Objects and Classes. Here is a simple program to demonstrate the syntax and general concept.&lt;/p>
&lt;h3 id="carcpp">car.cpp&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-C++" data-lang="C++">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">car&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">private&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="n">string&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">public&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="n">setName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="nf">getName&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">car&lt;/span> &lt;span class="n">s1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">s1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;BMW&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">s1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getName&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="output">Output&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="n">Success&lt;/span> &lt;span class="err">#&lt;/span>&lt;span class="n">stdin&lt;/span> &lt;span class="err">#&lt;/span>&lt;span class="n">stdout&lt;/span> &lt;span class="mf">0.01&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="mi">5532&lt;/span>&lt;span class="n">KB&lt;/span>
&lt;span class="n">BMW&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The above program is a simple example of how to create a class and how to use it. It contains one data member, name, and two functions, setName and getName. The setName function sets the name of the car to the value passed as an argument. The getName function prints the name of the car.&lt;/p>
&lt;p>Placing data and functions in a class is called encapsulation. Encapsulation is a way to hide the implementation details of a class. It is a way to hide the implementation details of a class.&lt;/p>
&lt;h3 id="how-is-object-related-to-class">How is Object related to Class?&lt;/h3>
&lt;p>An object is said to be an instance of a class, just like BMW is an instance of the car. In our program, we have created a &lt;code>car&lt;/code> class and created an object of that class in the &lt;code>main()&lt;/code> function. We defined an object of the class &lt;code>car&lt;/code> and assigned it to the variable &lt;code>s1&lt;/code>.&lt;/p>
&lt;h3 id="declaring-a-class">Declaring a &lt;code>class&lt;/code>&lt;/h3>
&lt;p>This part of the program is where we declare the class. We declare the class by using the keyword &lt;code>class&lt;/code>.&lt;/p>
&lt;p>Here is the declaration of the class:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-C++" data-lang="C++">&lt;span class="k">class&lt;/span> &lt;span class="nc">class_name&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// class definition goes here
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In our case, we have declared a class named &lt;code>car&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-C++" data-lang="C++">&lt;span class="k">class&lt;/span> &lt;span class="nc">car&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">private&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="n">string&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">public&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="n">setName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="nf">getName&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The declaration starts with a keyword &lt;code>class&lt;/code> followed by the name of the class. The class name is followed by a block of curly braces. The curly braces contain the data members and functions of the class. Don&amp;rsquo;t forget the semicolon at the end of the declaration.&lt;/p>
&lt;div class="notices note" >&lt;p>Data constructs like structures and classes end with the semicolon, while constructs like functions and loops do not end with a semicolon.&lt;/p>&lt;/div>
&lt;h3 id="private-and-public">&lt;code>private&lt;/code> and &lt;code>public&lt;/code>&lt;/h3>
&lt;p>There are two unfamiliar keywords in the above program. The first is &lt;code>private&lt;/code> and the second is &lt;code>public&lt;/code>.&lt;/p>
&lt;p>The &lt;code>private&lt;/code> keyword is used to declare data members of a class that are not accessible outside the class. The &lt;code>public&lt;/code> keyword is used to declare data members of a class that are accessible outside the class.&lt;/p>
&lt;p>A key feature of OOP is data hiding. This does not refer to the activities of particularly paranoid people. It refers to the fact that data members of a class are concealed and cannot be accessed by functions outside the class.&lt;/p>
&lt;h3 id="class-data">Class data&lt;/h3>
&lt;p>The &lt;code>car&lt;/code> contains one data member, name. The data member is declared using the keyword &lt;code>string&lt;/code> and the name of the data member is &lt;code>name&lt;/code>. There can be any number of data members in a class. The data members are declared using the keyword &lt;code>private&lt;/code>, so that it can be accessed from within a classs and not from outside.&lt;/p>
&lt;h3 id="class-member-functions">Class Member Functions&lt;/h3>
&lt;p>The &lt;code>car&lt;/code> contains two functions, setName and getName. The functions are declared using the keyword &lt;code>public&lt;/code>, so that they can be accessed from outside the class. Here is the syntax for declaring a function:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-C++" data-lang="C++">&lt;span class="kt">void&lt;/span> &lt;span class="nf">function_name&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">parameter_list&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">function_body&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In our case we have declared two functions as:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-C++" data-lang="C++">&lt;span class="kt">void&lt;/span> &lt;span class="nf">setName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="nf">getName&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="functions-are-public-data-is-private">Functions are Public, Data is Private&lt;/h3>
&lt;p>Usually, the functions of a class are declared as &lt;code>public&lt;/code> and the data members are declared as &lt;code>private&lt;/code>. This is the default behavior of C++. However, sometimes, we want to access the data members of a class from outside the class. In that case, we can declare the data members as &lt;code>public&lt;/code> and also the functions as &lt;code>private&lt;/code>.&lt;/p>
&lt;h3 id="using-a-class">Using a Class&lt;/h3>
&lt;p>The &lt;code>car&lt;/code> class is used in the &lt;code>main()&lt;/code> function. The &lt;code>main()&lt;/code> function creates an object of the class &lt;code>car&lt;/code> and assigns it to the variable &lt;code>s1&lt;/code>.&lt;/p>
&lt;h4 id="defining-an-object">Defining an Object&lt;/h4>
&lt;p>The first statement in the &lt;code>main()&lt;/code> function &lt;code>car s1;&lt;/code> is to create an object of the class &lt;code>car&lt;/code>. Remember that the object is not created just by declaring the class. Class only defines how it will look when they are created. Defining an object is just like defining a variable of any data type. Space is set aside for it in memory.&lt;/p>
&lt;h4 id="calling-a-member-function">Calling a Member Function&lt;/h4>
&lt;p>The next two statements in the &lt;code>main()&lt;/code> function,&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-C++" data-lang="C++">&lt;span class="n">s1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;BMW&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">s1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getName&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Are to call the functions of the object &lt;code>s1&lt;/code>. You might have noticed that the object name is connected to the function name as in &lt;code>s1.getName()&lt;/code>. This is because setdata() is a member function of the class &lt;code>car&lt;/code> and it must always be called using the object name.&lt;/p>
&lt;div class="notices note" >&lt;p>Member functions of a class can be accessed only by an object of that particular class.&lt;/p>&lt;/div>
&lt;p>Okay so that is all about intro on classes. Will see more on Classes and Objects in the upcoming articles.&lt;/p>
&lt;p>Here is the permalink: &lt;a href="https://neerajadhav.github.io/series/oop-with-c++/">&amp;ldquo;OOP with C++ Series&amp;rdquo;&lt;/a>, save it.&lt;/p>
&lt;p>Till then keep calm, stay healthy, stay motivated and stay focused.&lt;/p></description></item><item><title>Variables and Data Types</title><link>https://cswhizz.github.io/post/variables-and-data-types/</link><pubDate>Tue, 31 Aug 2021 15:15:00 +0000</pubDate><guid>https://cswhizz.github.io/post/variables-and-data-types/</guid><description>&lt;p>This is the third post in this &lt;a href="https://neerajadhav.github.io/series/oop-with-c++/">OOP with C++ Series&lt;/a>.&lt;/p>
&lt;h3 id="variables">Variables&lt;/h3>
&lt;p>Before going to the definition of variables, let us relate them to old mathematical equations. All of
us have solved many mathematical equations since childhood. We used to take x and y as the variables. The important thing that we need to understand is that the equation has names (x and y), which hold values (data). That means the names (x and y) are placeholders for representing data. Same is in the case of variables in programming languages.&lt;/p>
&lt;p>When declaring a variable, we have the option of providing a definition, or
initial value. If no definition is given, the initial value is unpredictable, so it is
important that each variable be assigned a value before being used. Variable names
may consist of any combination of letters, digits, or the underscore (_) character,
but the first character cannot be a digit. Here are some examples of declarations of
integral variables.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-C++" data-lang="C++">&lt;span class="kt">short&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">octalNumber&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mo">0144&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kt">char&lt;/span> &lt;span class="n">newline_char&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sc">&amp;#39;\n&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kt">long&lt;/span> &lt;span class="n">BigNumber&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">31459265L&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kt">short&lt;/span> &lt;span class="n">_aStrange__123_Variable&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="data-types">Data Types&lt;/h3>
&lt;p>A data type in a programming language is a set of data with
predefined values. Examples of data types are: integer, floating point, unit number, character,
string, etc. Finally, there is a special data type void, which explicitly indicates the absence
of any type information. We need to specify the data type while we declare a variable. This associates the variable with a set of values.&lt;/p>
&lt;h3 id="fundamental-data-types">Fundamental Data Types&lt;/h3>
&lt;p>There are six fundamental data types in C++. They are:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Data Type&lt;/th>
&lt;th>Range&lt;/th>
&lt;th>byte&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>int&lt;/td>
&lt;td>-2,147,483,648 to 2,147,483,647&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>short&lt;/td>
&lt;td>-32,768 to 32,767&lt;/td>
&lt;td>2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>long&lt;/td>
&lt;td>-2,147,483,648 to 2,147,483,647&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bool&lt;/td>
&lt;td>true or false&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>float&lt;/td>
&lt;td>-3.4E38 to 3.4E38&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>double&lt;/td>
&lt;td>-1.7E308 to 1.7E308&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>char&lt;/td>
&lt;td>a single character&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>string&lt;/td>
&lt;td>a sequence of characters&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Let&amp;rsquo;s discuss some data types in detail.&lt;/p>
&lt;h3 id="integer">Integer&lt;/h3>
&lt;p>An &lt;strong>int&lt;/strong> variable holds an integer. Integers come in three sizes: short int, (plain) int, and long int. The terms &lt;strong>short&lt;/strong> and &lt;strong>long&lt;/strong> are synonyms for &lt;strong>short int&lt;/strong> and &lt;strong>long int,&lt;/strong> respectively. Decimal numbers such as 0, 25, 98765, and -3 are of type int. The suffix &lt;strong>l&lt;/strong> or &lt;strong>L&lt;/strong> can be added to indicate a long integer, as in 123456789L. Octal (base 8) constants are specified by prefixing the number with the zero digit, and hexadecimal (base 16) constants can be specified by prefixing the number with &lt;strong>0x&lt;/strong>. For example, the literals 256, 0400, and 0x100 all represent the integer value 256 (in decimal).&lt;/p>
&lt;h3 id="floating-point">Floating Point&lt;/h3>
&lt;p>A variable of type &lt;strong>float&lt;/strong> holds a single-precision floating-point number, and a variable of type double holds a double-precision floating-point number. As it does
with integers, C++ leaves undefined the exact number of bits in each of the floating point types. By default, floating point literals, such as 3.14159 and -1234.567 are of type double. Scientific or exponential notation may by specified using either &lt;strong>e&lt;/strong> or &lt;strong>E&lt;/strong> to separate the mantissa from the exponent, as in 3.14E5, which means
3.14 × 10 5 . To force a literal to be a float, add the suffix &lt;strong>f&lt;/strong> or &lt;strong>F&lt;/strong>, as in 2.0f or 1.234e-3F.&lt;/p>
&lt;h3 id="characters">Characters&lt;/h3>
&lt;p>A &lt;strong>char&lt;/strong> variable holds a single character. A char in C++ is typically 8-bits, but the exact number of bits used for a char variable is dependent on the particular implementation. By allowing different implementations to define the meaning of basic types, such as char, C++ can tailor its generated code to each machine architecture and so achieve maximum efficiency.&lt;/p>
&lt;p>This flexibility can be a source of frustration
for programmers who want to write machine-independent programs, however. A literal is a constant value appearing in a program. Character literals are enclosed in single quotes, as in &lt;strong>’a’&lt;/strong>, &lt;strong>’Q’&lt;/strong>, and &lt;strong>’+’&lt;/strong>.&lt;/p>
&lt;h3 id="conclusion">Conclusion&lt;/h3>
&lt;p>This is it in the basics of C++. From the next article we will be learning the OOP, Objects and Classes and how they are used in C++. Don&amp;rsquo;t worry about the loops, operators and functions and the rest stuff. We will be learning in a very different flow.&lt;/p>
&lt;p>Till then keep calm, stay healthy, stay motivated and stay focused.&lt;/p>
&lt;p>Here is the permalink: &lt;a href="https://neerajadhav.github.io/series/oop-with-c++/">&amp;ldquo;OOP with C++ Series&amp;rdquo;&lt;/a>, save it.&lt;/p>
&lt;p>Also don&amp;rsquo;t forget to comment your views below.&lt;/p></description></item><item><title>Top 5 Programming Languages and Their Specialities</title><link>https://cswhizz.github.io/post/top-5-programming-languages-and-their-specialities/</link><pubDate>Tue, 24 Aug 2021 07:22:00 +0000</pubDate><guid>https://cswhizz.github.io/post/top-5-programming-languages-and-their-specialities/</guid><description>&lt;h3 id="c-programming-language">C Programming Language&lt;/h3>
&lt;center>
&lt;img src="https://upload.wikimedia.org/wikipedia/commons/3/35/The_C_Programming_Language_logo.svg" alt="C Programming Language" style="max-height: 200px;">
&lt;/center>
&lt;p>C is a general-purpose, imperative computer programming language. It has imperative and declarative syntaxes, while also providing facilities for low-level programming. C provides a large standard library, and is an essential part of the ANSI C and POSIX standards.&lt;/p>
&lt;p>Hello World program in C&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="c1">// Your First C Program
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// printf() displays the string inside quotation
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello, World!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>C is used as a programming language in several ways, such as:&lt;/p>
&lt;ul>
&lt;li>In IoT, also known as the &amp;ldquo;Internet of things,&amp;rdquo; applications&lt;/li>
&lt;li>For producing compilers&lt;/li>
&lt;li>When developing the operating system used on a desktop as well as a smartphone&lt;/li>
&lt;li>To develop and build databases&lt;/li>
&lt;li>For developing Internet browsers as well as their extensions&lt;/li>
&lt;li>To develop creative applications, such as photography and graphic design tools, as well as&lt;/li>
&lt;li>desktop and system applications&lt;/li>
&lt;li>In embedded systems&lt;/li>
&lt;/ul>
&lt;h3 id="c-programming-language-1">C++ Programming Language&lt;/h3>
&lt;center>
&lt;img src="https://upload.wikimedia.org/wikipedia/commons/1/18/ISO_C%2B%2B_Logo.svg" alt="C++ Programming Language" style="max-height: 200px;">
&lt;/center>
&lt;p>C++ is a general-purpose, object-oriented, and high-level programming language. It has a static type system and data-driven programming, while also providing facilities for low-level programming. C++ is a modern extension of the C language.&lt;/p>
&lt;p>Hello World program in C++&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="c1">// Your First C++ Program
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;Hello World!&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>C++ is used as a programming language in several ways, such as:&lt;/p>
&lt;ul>
&lt;li>In the development of software applications&lt;/li>
&lt;li>Game development&lt;/li>
&lt;li>For creating compilers&lt;/li>
&lt;li>Animation softwares&lt;/li>
&lt;li>For developing Internet browsers as well as their extensions&lt;/li>
&lt;li>Database access applications&lt;/li>
&lt;li>Media access applications&lt;/li>
&lt;li>Desktop and system applications&lt;/li>
&lt;li>Operating systems&lt;/li>
&lt;/ul>
&lt;!--adsense-->
&lt;h3 id="java-programming-language">Java Programming Language&lt;/h3>
&lt;center>
&lt;img src="https://upload.wikimedia.org/wikipedia/en/3/30/Java_programming_language_logo.svg" alt="Java Programming Language" style="max-height: 200px;">
&lt;/center>
&lt;p>Java is a high-level, class-based, object-oriented programming language that is created by Sun Microsystems. Java was originally developed by James Gosling and released in 1995. Java is a general-purpose programming language, and is used for developing a wide range of applications.&lt;/p>
&lt;p>Hello World program in Java&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="c1">// Your First Java Program
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="kd">class&lt;/span> &lt;span class="nc">HelloWorld&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Hello, World!&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Java is used as a programming language in several ways, such as:&lt;/p>
&lt;ul>
&lt;li>Desktop GUI&lt;/li>
&lt;li>Applications for mobiles&lt;/li>
&lt;li>Embedded systems&lt;/li>
&lt;li>Web applications&lt;/li>
&lt;li>Applications for the cloud servers&lt;/li>
&lt;li>Scientific applications&lt;/li>
&lt;li>Big data applications&lt;/li>
&lt;li>Business applications&lt;/li>
&lt;/ul>
&lt;!--adsense-->
&lt;h3 id="python-programming-language">Python Programming Language&lt;/h3>
&lt;center>
&lt;img src="https://upload.wikimedia.org/wikipedia/commons/f/f8/Python_logo_and_wordmark.svg" alt="Python Programming Language" style="max-height: 200px;">
&lt;/center>
&lt;p>Python is a high-level, general-purpose programming language. It was created by Guido van Rossum and first released in 1991. Its design is based on the simplicity of its syntax and a focus on readability. Python is often used for data analysis, numerical computation, and scientific computing.&lt;/p>
&lt;p>Hello World program in Python&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Your First Python Program&lt;/span>
&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Hello, world!&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Python is used as a programming language in several ways, such as:&lt;/p>
&lt;ul>
&lt;li>AI and Machine Learning&lt;/li>
&lt;li>Data analysis&lt;/li>
&lt;li>Data visualization&lt;/li>
&lt;li>Programming applications&lt;/li>
&lt;li>Game development&lt;/li>
&lt;li>Web development&lt;/li>
&lt;li>Language development&lt;/li>
&lt;li>Financial applications&lt;/li>
&lt;li>SEO&lt;/li>
&lt;/ul>
&lt;!--adsense-->
&lt;h3 id="ruby-programming-language">Ruby Programming Language&lt;/h3>
&lt;center>
&lt;img src="https://upload.wikimedia.org/wikipedia/commons/7/73/Ruby_logo.svg" alt="Ruby Programming Language" style="max-height: 200px;">
&lt;/center>
&lt;p>Ruby is a dynamic, open source programming language that is created by Yukihiro &amp;ldquo;Matz&amp;rdquo; Matsumoto and is maintained by the Ruby Core Team. It is designed to be simple, fast, and fun to use. It is a general-purpose language similar to Python, so it has many other applications like data analysis, prototyping, and proof of concepts.&lt;/p>
&lt;p>Hello World program in Ruby&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="c1"># Your First Ruby Program&lt;/span>
&lt;span class="nb">puts&lt;/span> &lt;span class="s1">&amp;#39;Hello, world!&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ruby is used as a programming language in several ways, such as:&lt;/p>
&lt;ul>
&lt;li>Ruby is Rails web, the development framework&lt;/li>
&lt;li>Homebrew, an extremely popular tool for installing software packages on macOS&lt;/li>
&lt;li>Security software Metasploit, which allows you to test websites and applications&lt;/li>
&lt;li>Build secure a website&lt;/li>
&lt;/ul></description></item><item><title>Why there is Need to Re-open Colleges?</title><link>https://cswhizz.github.io/post/why-there-is-need-to-re-open-colleges/</link><pubDate>Tue, 03 Aug 2021 04:30:00 +0000</pubDate><guid>https://cswhizz.github.io/post/why-there-is-need-to-re-open-colleges/</guid><description>&lt;p>The COVID-19 has resulted in schools shut all across the world. Globally, over 1.2 billion children are out of the classroom.&lt;/p>
&lt;p>As a result, education has changed dramatically, with the distinctive rise of e-learning, whereby teaching is undertaken remotely and on digital platforms.&lt;/p>
&lt;p>&lt;strong>Here are the Top 5 Reasons Why Colleges should be Re-Opened&lt;/strong>&lt;/p>
&lt;h3 id="there-is-lack-of-face-to-face-communication">There is lack of face-to-face communication&lt;/h3>
&lt;p>The lack of face-to-face communication combines many of the shortcomings of online learning described above. The lack of face-to-face communication with teachers hinders student feedback, leads to social isolation, and can reduce student pressure. Stress is a disadvantage because it makes it easier for students to drop out. For many people, regular contact with teachers may be unwelcome, but it is an effective way to retain students.&lt;/p>
&lt;!--adsense-->
&lt;h3 id="online-learning-causes-social-isolation">Online Learning causes social Isolation&lt;/h3>
&lt;p>The online teaching methods used in education often experience, distance, and lack of interaction among participating students, which will cause many students and teachers who inevitably spend most of their time online to experience signs of social isolation. Because of the lack of interpersonal communication in their lives. Social isolation and lack of communication often lead to various psychological problems, such as increased stress, anxiety and negative thoughts.&lt;/p>
&lt;h3 id="online-learning-requires-strong-self-motivation-and-time-management-skills">Online Learning requires strong self-motivation and time management skills&lt;/h3>
&lt;p>The lack of self-motivation of students is still one of the main reasons why students do not take online courses. In traditional classrooms, there are many factors that continuously drive students toward their learning goals. Work together so that students will not be distracted while studying.&lt;/p>
&lt;p>However, in the online learning environment, there are fewer external factors that drive students to perform well. Even if they are not constantly moving towards their learning goals in their learning activities, students participating in online learning courses find that they often need to learn complex materials in a comfortable home environment without the extra pressure that traditional universities usually require. Therefore, online learning is difficult to complete on time. It is difficult for students who lack strong self-motivation and time management skills.&lt;/p>
&lt;!--adsense-->
&lt;h3 id="lack-of-communication-skills">Lack of Communication skills&lt;/h3>
&lt;p>Facts have proved that e-learning methods are very effective in improving students’ academic knowledge; however, cultivating students’ communication skills is an area that is often overlooked in online teaching. In an online environment, students may find that they cannot work effectively in a team environment. The neglect of students' communication skills inevitably leads to many graduates who have excellent theoretical knowledge, but they are unable to impart their knowledge to others.&lt;/p>
&lt;h3 id="online-education-is-limited-to-theory-there-is-no-practical-knowledge">Online education is limited to theory, there is no practical knowledge&lt;/h3>
&lt;p>Although this drawback of online Learning is starting to be addressed and fixed by some of the more innovative online learning platforms, the problem has yet to disappear completely. The problem is that a large portion of E-Learning training providers choose to focus largely (in many cases entirely) on developing theoretical knowledge, rather than practical skills. The reason for this is evident – theoretical lectures are considerably easier to implement in an online learning environment than practical lectures. After all, without face-to-face communication and physical classrooms to use as a workshop, implementing practical projects in an online course requires significantly more prior planning than theoretical training.&lt;/p></description></item><item><title>My Plans for Second Year of Computer Engineering</title><link>https://cswhizz.github.io/post/my-plans-for-second-year-of-computer-engineering/</link><pubDate>Sun, 01 Aug 2021 06:30:00 +0000</pubDate><guid>https://cswhizz.github.io/post/my-plans-for-second-year-of-computer-engineering/</guid><description>&lt;h3 id="today">Today&lt;/h3>
&lt;p>So its August 2021 and today is my Second Semester End Sem exam :) wierd right! In short my &lt;a href="http://neerajadhav.github.io/how-to-start-your-first-year-computer-science-journey/" title="First year of computer Engineering">first year of Computer Engineering&lt;/a> is about to end.&lt;/p>
&lt;p>If you are someone who don&amp;rsquo;t know what to do in the upcoming year, then you are at the right place. Here are few of my future plans which I will try my best to accomplish.&lt;/p>
&lt;h3 id="base">Base&lt;/h3>
&lt;p>If you want to be a good programmer, then only thing you should do is&amp;hellip;.Practice coding daily. This will improve your skills and thought process. The fast you are able to find solution of particular problem, the more are your chances of cracking campus selection interviews.&lt;/p>
&lt;!--adsense-->
&lt;h3 id="dont-hurry-to-follow-the-trend">Don&amp;rsquo;t hurry to follow the trend&lt;/h3>
&lt;p>The biggest mistake people do is that they start thinking on which language should they learn first. I must say don&amp;rsquo;t hesitate to pick &lt;strong>C/C++&lt;/strong> as your first language in programming.&lt;/p>
&lt;p>Many people will say &lt;strong>Python&lt;/strong> is the trend, there is much scope in python and so on. If you learn &lt;strong>C/C++&lt;/strong> programming first, then moving on towards any other language will not be a big deal for you. For instance, if you learn a manual transmission car, then you will easily get adapt to automatic car.&lt;/p>
&lt;p>Keep your understanding and concepts crystal clear, be patient, keep practicing, challenge thyself and you will be a master at programming.&lt;/p>
&lt;!--adsense-->
&lt;h3 id="college-curriculum">College Curriculum&lt;/h3>
&lt;p>Depending upon your college syllabus, in each semester you will learn new programming language.
Here is the list,&lt;/p>
&lt;ol>
&lt;li>C Language&lt;/li>
&lt;li>C++ Programming&lt;/li>
&lt;li>Data Structure and Algorithms&lt;/li>
&lt;li>Core Java&lt;/li>
&lt;li>C#.net&lt;/li>
&lt;li>HTML, CSS, JavaScript&lt;/li>
&lt;li>PHP&lt;/li>
&lt;li>ASP . Net&lt;/li>
&lt;li>Android Development (added recently from 2017)&lt;/li>
&lt;li>Python&lt;/li>
&lt;/ol>
&lt;p>If you want to increase your logical skills then learn Data Structure and Algorithms in very deeply with different languages like C, C++ and Java, it will helps you lot and increase your problem solving skills. &lt;strong>Never miss any lecture or any opportunity to learn DSA&lt;/strong>.&lt;/p>
&lt;h3 id="side-by-side">Side by Side&lt;/h3>
&lt;p>Along with all these, you will have to learn English and aptitude. This will help you to crack campus interviews' first round.&lt;/p>
&lt;!--adsense-->
&lt;h3 id="project-based-learning">Project Based Learning&lt;/h3>
&lt;p>Most MNCs are in search of employees who have good practical knowledge.&lt;/p>
&lt;p>Projects can be one of the most efficient ways to learn as they force you to apply the skills while learning them. This, in fact, aids in retention and increases the usefulness of the skills learned.&lt;/p>
&lt;p>These projects will teach you a great deal about one concept or another. From learning how to apply Algorithms, to learning how to effectively deal with times, you will be able to showcase your skills in most efficient way.&lt;/p>
&lt;p>Thank you for reading this far. Comment your views in the comments section. Stay motivated.&lt;/p></description></item><item><title>How to start your First Year Computer Science Journey</title><link>https://cswhizz.github.io/post/how-to-start-your-first-year-computer-science-journey/</link><pubDate>Fri, 30 Jul 2021 18:30:00 +0000</pubDate><guid>https://cswhizz.github.io/post/how-to-start-your-first-year-computer-science-journey/</guid><description>&lt;h3 id="reality">Reality&lt;/h3>
&lt;p>Every student has big dreams in college, but unfortunately, some students give up completely till the second or third year. One of the main reasons is that they don&amp;rsquo;t pay much attention to learning. At the beginning, they either don&amp;rsquo;t know what to do to get into the company they dream of. When students of the same age get good internship opportunities or perform well in competitions, they feel frustrated. The only thing you can do to avoid this feeling is to persevere from the start.&lt;/p>
&lt;p>University days are the best time in anyone’s life. The first year itself is the best time. Because students make new friends, the more freedom you want, the more freedom you get. Because they are tired of the entrance exam study and now they want to have fun. There is nothing wrong with it. It should be interesting and discovering new things in college life, but it is good to start developing yourself so that this will not become a problem in your career.&lt;/p>
&lt;p>Always make time for the career you want to pursue. Even if you only spend two or three hours to improve your skills, you will reach a different level within a year.&lt;/p>
&lt;p>&lt;strong>This article will tell you what you need. Whether you are a freshman or not, if you are an engineering or computer science student&lt;/strong>&lt;/p>
&lt;!--adsense-->
&lt;h3 id="step-0---brushing-up">Step 0 - Brushing up&lt;/h3>
&lt;p>First, increase your typing speed. From now on, you will always be dealing with the computer. If you are not typing fast, you will be at a disadvantage and you will waste a lot of time compared to others. Start doing touch typing, Try to learn keyboard shortcuts, this will save lot of your time.&lt;/p>
&lt;h4 id="gpa-vs-skills">GPA v/s Skills&lt;/h4>
&lt;p>Next is upskilling yourself. Most students think that only by getting good grades can they find a good job. That is the wrong way of thinking. You have to abide by some standards to sit down and accept the interview, but in the end all you see is how good your skill is. If you are looking for employees or you want to start your own startup, you need skills, not qualifications.&lt;/p>
&lt;p>But again, this is another big mistake made by some students. If you do not meet the minimum standards, how will you demonstrate your skills? or how will you apply for a higher degree? so grades are also important.&lt;/p>
&lt;!--adsense-->
&lt;h3 id="step-1---plan-for-action">Step 1 - Plan for Action&lt;/h3>
&lt;p>Try making your own pathway of learning new skills. For instance if you want to learn web development then plan your first month of the learning process, you can break down like you doing HTML and CSS in the first two weeks, then JavaScript, etc.&lt;/p>
&lt;h4 id="dont-wait-for-others">Don&amp;rsquo;t wait for others&lt;/h4>
&lt;p>The students think that they have the data structure and algorithm course in the second year, they will learn it in the second year, so they don&amp;rsquo;t worry about the topic at that time. time.&lt;/p>
&lt;p>But what you really need to do is, if you have mastered the basics of a language, you have to learn part of the data structure, because this is one of the most important subjects for computer science students, in the interview you need to solve the problems that require a deep understanding of these topics, you need to explain your code, and you will be ask why you chose this data structure. If you did not learn these topics correctly, you will not be able answer any of these questions.&lt;/p>
&lt;!--adsense-->
&lt;h3 id="step-2---work-on-your-communication-and-writing-skills">Step 2 - Work on Your Communication and Writing Skills&lt;/h3>
&lt;p>Students do not improve their communication skills and lose the opportunity to be selected for internships or projects. From the first year of university, you should begin to exercise on your communication and writing skills in order to be more confident in interviews and can express yourself correctly. To improve your writing skills, you can start writing your own blog, article or story.&lt;/p>
&lt;h3 id="step-3---learn-by-making-projects">Step 3 - Learn By Making Projects&lt;/h3>
&lt;p>Projects are a great way to learn anything and add something to your resume. While learning languages ​​or new skills, you should always complete multiple small projects. You will begin to understand the use case correctly, and as you succeed, your ability to solve problems will also improve our own stuff.&lt;/p>
&lt;p>You also need some good projects to apply for your area of ​​interest to demonstrate your skills. Therefore, once you master the basics, you can start working on some real-time projects that you need. You can also collaborate with other developers or participate in open source projects to understand how git and GitHub works, and how the team handles large projects in the real world.&lt;/p>
&lt;h3 id="step-4---dont-try-to-learn-all-at-once">Step 4 - Don’t Try To Learn All at Once&lt;/h3>
&lt;p>First, you should focus on a language until you master it correctly. Some freshmen try to learn more and more languages instead of focusing on one language, and end up learning nothing.&lt;/p>
&lt;p>Remember, if you are proficient in one of these languages, switching to the other language is not that difficult. But if you often try to change the grammar you won&amp;rsquo;t remember anyone, and no one will ask you how many languages ​​you know. In fact, you only need a language to clean up a company&amp;rsquo;s programming cycle. They want to see your problem-solving skills, not your memory skills.&lt;/p>
&lt;!--adsense-->
&lt;h3 id="step-5---certificates-are-not-everything">Step 5 - Certificates are Not Everything&lt;/h3>
&lt;p>Many freshmen think certification is very important and try to get more certifications. If you have received a certificate to participate in the course or competition you requested, that&amp;rsquo;s great, but you should not participate in any competition just for certified webinars.&lt;/p>
&lt;p>You should get involved to gain experience, learn new things or become better. Some students add certification sections to their resumes, but it is always better to complete some good projects for the skills mentioned in your resume than to obtain a certificate of courses in these skills. Even Google believes you don’t need a college degree to get a high paying tech job.&lt;/p>
&lt;h3 id="final-words">Final words&lt;/h3>
&lt;p>Pursuing career in Computer Science is not that easy, it seems too much burden and too much to learn, but in reality if you enjoy your work along with living every other aspect of life, it will be fun.&lt;/p>
&lt;p>Along with studies try to give some time to your friends and family, hang out with them, go out for trekking and have fun!&lt;/p></description></item></channel></rss>